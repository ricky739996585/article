<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kjz.www.article.mapper.IArticleTagsMapper">
	<resultMap id="baseResultMap" type="com.kjz.www.article.domain.ArticleTags">
		<id column="article_tags_id" jdbcType="INTEGER" property="articleTagsId" />
		<result column="tags_id" jdbcType="INTEGER" property="tagsId" />
		<result column="article_id" jdbcType="INTEGER" property="articleId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="tb_status" jdbcType="CHAR" property="tbStatus" />
	</resultMap>
	<resultMap id="voResultMap" type="com.kjz.www.article.vo.ArticleTagsVo">
		<id column="article_tags_id" jdbcType="INTEGER" property="articleTagsId" />
		<result column="tags_id" jdbcType="INTEGER" property="tagsId" />
		<result column="article_id" jdbcType="INTEGER" property="articleId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
		<result column="tb_status" jdbcType="CHAR" property="tbStatus" />
	</resultMap>
	<sql id="baseColumnList">
article_tags_id,tags_id,article_id,create_time,modify_time,tb_status	</sql>
	<sql id="voColumnList">
article_tags_id,tags_id,article_id,create_time,modify_time,tb_status	</sql>
		<insert id="insert" useGeneratedKeys="true" keyProperty="entity.articleTagsId">
		INSERT INTO ${tableName} (
		tags_id, article_id
		) VALUES (
		#{entity.tagsId}, #{entity.articleId}
		)	</insert>
		<insert id="insertByBatch" parameterType="java.util.List">
		INSERT INTO ${tableName} (
		tags_id, article_id
		) VALUES 
		<foreach collection="list" item="entity" index="index" separator=",">
			(#{entity.tagsId}, #{entity.articleId})
		</foreach>
	</insert>
		<update id="update">
		UPDATE ${tableName} SET 
		tags_id=#{entity.tagsId}, article_id=#{entity.articleId}, tb_status=#{entity.tbStatus}
		 WHERE 
		article_tags_id = #{entity.articleTagsId}

	</update>
	<select id="getById" parameterType="java.lang.Integer" resultMap="voResultMap">
		select
		<include refid="voColumnList" />
		from ${tableName} 
		where article_tags_id = #{id}
	</select>
	<select id="getOne" parameterType="java.util.Map" resultMap="voResultMap">
		select
		<if test="field == null">
			<include refid="voColumnList" />
		</if>
		<if test="field != null">
			${field}
		</if>
		from ${tableName} 
		<where>
			<foreach collection="condition" index="key" item="value">
				${value} ${key}
			</foreach>
		</where>
		limit 1;
	</select>
	<select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select
		count(article_tags_id)
		from ${tableName} 
		<where>
			<foreach collection="condition" index="key" item="value">
				${value} ${key}
			</foreach>
		</where>
	</select>
	<!-- 这部分为根据传递参数，自动生成SQL -->
	<select id="getList" parameterType="java.util.Map" resultMap="voResultMap">
		select
		<if test="field == null">
			<include refid="voColumnList" />
		</if>
		<if test="field != null">
			${field}
		</if>
		from ${tableName} 
		<where>
			<foreach collection="condition" index="key" item="value">
				${value} ${key}
			</foreach>
		</where>
		<if test="order != null">
			order by ${order}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>
	<!-- 判断表格是否存在，如果不存在可以配合createTable使用，用于动态创建表格 -->
	<select id="existTable" parameterType="String" resultType="java.lang.Integer">
		select count(table_name) from information_schema.TABLES WHERE table_name=#{tableName} ;
	</select>
	<update id="createTable" parameterType="String">
		<!-- 这里是创建表格的SQL，复制过来，表名作为参数传递 -->
		<!-- create table ${tableName} (   //  表名要这样写 -->
	</update>
	<cache />
</mapper>
